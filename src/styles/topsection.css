/* src/styles/topsection.css */

/* ——————————————
   1) The top bar itself
   —————————————— */
.bar.top {
  position: relative;            /* anchor for absolutely‑positioned children */
  display: flex;
  justify-content: center;       /* centre normal‑flow children (e.g. .attendee-count) */
  align-items: center;
  padding: 0.5rem 1rem;
}

/* ——————————————————————————————————
   2) One centred “button stack” that positions BOTH buttons
   —————————————————————————————————— */
.button-stack {
  position: absolute;            /* floats inside the bar */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* true centre */

  display: flex;
  flex-direction: column;        /* vertical stack */
  align-items: center;           /* keep children horizontally centred */
  gap: 0.5rem;                   /* space between INFO & Support */
}

/* ——————————————————————————————
   3) Shared button rules (no absolute‑pos here!)
   —————————————————————————————— */
.info-button,
.support-button {
  position: static;              /* override any old absolute rules */
  min-width: 150px;
  text-align: center;
}

/* —————————————————————————————————————————————————————
   4) Attendee counter styling (unchanged apart from minor clean‑up)
   ————————————————————————————————————————————————————— */
.bar.top .counter {
  position: absolute;
  top: 16px;
  right: 16px;
  font-size: 1.5rem;
  background: rgba(255, 255, 255, 0.8);
  padding: 4px 8px;
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.4s;
  pointer-events: none;
}

.bar.top .counter.visible {
  opacity: 1;
}

/* Optional: if some logic relies on .attendee-count being in flow */
.bar.top .attendee-count {
  margin-right: 0.5rem;
}
.support-button {
  font-size: 0.90rem; /* adjust as needed */
}